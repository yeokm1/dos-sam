#
# sam makefile
#
#
# Possible optimizations for 8088 class processors
#
# -oa   Relax alias checking
# -ob   Try to generate straight line code
# -oe - expand user functions inline (-oe=20 is default, adds lots of code)
# -oh   Enable repeated optimizations
# -oi   generate certain lib funcs inline
# -oi+  Set max inline depth (C++ only, use -oi for C)
# -ok   Flowing of register save into function flow graph
# -ol   loop optimizations
# -ol+  loop optimizations plus unrolling
# -or   Reorder for pipelined (486+ procs); not sure if good to use
# -os   Favor space over time
# -ot   Favor time over space
# -ei   Allocate an "int" for all enum types
# -zp2  Allow compiler to add padding to structs
# -zpw  Use with above; make sure you are warning free!
# -0    8088/8086 class code generation
# -s    disable stack overflow checking
# -zmf  put each function in a new code segment; helps with linking

# Make it fast.  But don't use -oe otherwise you'll need large model.

# 32-bit compilation
compile_options = -3 -oh -os -s -zp2 -zpw -we

# For untested 16-bit compilation
#memory_model = -ml
#compile_options = -0 $(memory_model) -oh -os -s -zp2 -zpw -we

objs = reciter.obj sam.obj render.obj main.obj debug.obj processframes.obj createtransitions.obj

all : clean sam.exe

clean : .symbolic
  @del sam.exe
  @del *.obj
  @del *.map

.cpp.obj :
  # 32-bit compilation
  wpp386 $[* $(compile_options)

  # For untested 16-bit compilation
  #wpp $[* $(compile_options)

.c.obj :
  # 32-bit compilation
  wcc386 $[* $(compile_options)
  
  # For untested 16-bit compilation
  #wcc $[* $(compile_options)

sam.exe: $(tcpobjs) $(objs)
  wlink system dos32x option map name $@ file *.obj
  
  #To compile for Win95
  #wlink system win95 option map name $@ file *.obj

  # For untested 16-bit compilation
  #wlink system dos option map option eliminate option stack=4096 name $@ file *.obj
  